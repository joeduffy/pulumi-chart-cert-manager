// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescertmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core.v1.inputs.AffinityArgs;
import com.pulumi.kubernetes.core.v1.inputs.PodSecurityContextArgs;
import com.pulumi.kubernetes.core.v1.inputs.ResourceRequirementsArgs;
import com.pulumi.kubernetes.core.v1.inputs.TolerationArgs;
import com.pulumi.kubernetescertmanager.inputs.CertManagerImageArgs;
import com.pulumi.kubernetescertmanager.inputs.CertManagerServiceAccountArgs;
import com.pulumi.kubernetescertmanager.inputs.CertManagerStartupAPICheckRBACArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertManagerStartupAPICheckArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertManagerStartupAPICheckArgs Empty = new CertManagerStartupAPICheckArgs();

    @Import(name="affinity")
    private @Nullable Output<AffinityArgs> affinity;

    public Optional<Output<AffinityArgs>> affinity() {
        return Optional.ofNullable(this.affinity);
    }

    /**
     * Job backoffLimit
     * 
     */
    @Import(name="backoffLimit")
    private @Nullable Output<Integer> backoffLimit;

    /**
     * @return Job backoffLimit
     * 
     */
    public Optional<Output<Integer>> backoffLimit() {
        return Optional.ofNullable(this.backoffLimit);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Optional additional arguments for startupapicheck
     * 
     */
    @Import(name="extraArgs")
    private @Nullable Output<List<String>> extraArgs;

    /**
     * @return Optional additional arguments for startupapicheck
     * 
     */
    public Optional<Output<List<String>>> extraArgs() {
        return Optional.ofNullable(this.extraArgs);
    }

    @Import(name="image")
    private @Nullable Output<CertManagerImageArgs> image;

    public Optional<Output<CertManagerImageArgs>> image() {
        return Optional.ofNullable(this.image);
    }

    /**
     * Optional additional annotations to add to the startupapicheck Job
     * 
     */
    @Import(name="jobAnnotations")
    private @Nullable Output<Map<String,String>> jobAnnotations;

    /**
     * @return Optional additional annotations to add to the startupapicheck Job
     * 
     */
    public Optional<Output<Map<String,String>>> jobAnnotations() {
        return Optional.ofNullable(this.jobAnnotations);
    }

    @Import(name="nodeSelector")
    private @Nullable Output<Map<String,String>> nodeSelector;

    public Optional<Output<Map<String,String>>> nodeSelector() {
        return Optional.ofNullable(this.nodeSelector);
    }

    /**
     * Optional additional annotations to add to the startupapicheck Pods
     * 
     */
    @Import(name="podAnnotations")
    private @Nullable Output<Map<String,String>> podAnnotations;

    /**
     * @return Optional additional annotations to add to the startupapicheck Pods
     * 
     */
    public Optional<Output<Map<String,String>>> podAnnotations() {
        return Optional.ofNullable(this.podAnnotations);
    }

    /**
     * Optional additional labels to add to the startupapicheck Pods
     * 
     */
    @Import(name="podLabels")
    private @Nullable Output<Map<String,String>> podLabels;

    /**
     * @return Optional additional labels to add to the startupapicheck Pods
     * 
     */
    public Optional<Output<Map<String,String>>> podLabels() {
        return Optional.ofNullable(this.podLabels);
    }

    @Import(name="rbac")
    private @Nullable Output<CertManagerStartupAPICheckRBACArgs> rbac;

    public Optional<Output<CertManagerStartupAPICheckRBACArgs>> rbac() {
        return Optional.ofNullable(this.rbac);
    }

    @Import(name="resources")
    private @Nullable Output<ResourceRequirementsArgs> resources;

    public Optional<Output<ResourceRequirementsArgs>> resources() {
        return Optional.ofNullable(this.resources);
    }

    /**
     * Pod Security Context to be set on the startupapicheck component Pod. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
     * 
     */
    @Import(name="securityContext")
    private @Nullable Output<PodSecurityContextArgs> securityContext;

    /**
     * @return Pod Security Context to be set on the startupapicheck component Pod. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
     * 
     */
    public Optional<Output<PodSecurityContextArgs>> securityContext() {
        return Optional.ofNullable(this.securityContext);
    }

    @Import(name="serviceAccount")
    private @Nullable Output<CertManagerServiceAccountArgs> serviceAccount;

    public Optional<Output<CertManagerServiceAccountArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    /**
     * Timeout for &#39;kubectl check api&#39; command
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<String> timeout;

    /**
     * @return Timeout for &#39;kubectl check api&#39; command
     * 
     */
    public Optional<Output<String>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    @Import(name="tolerations")
    private @Nullable Output<List<TolerationArgs>> tolerations;

    public Optional<Output<List<TolerationArgs>>> tolerations() {
        return Optional.ofNullable(this.tolerations);
    }

    private CertManagerStartupAPICheckArgs() {}

    private CertManagerStartupAPICheckArgs(CertManagerStartupAPICheckArgs $) {
        this.affinity = $.affinity;
        this.backoffLimit = $.backoffLimit;
        this.enabled = $.enabled;
        this.extraArgs = $.extraArgs;
        this.image = $.image;
        this.jobAnnotations = $.jobAnnotations;
        this.nodeSelector = $.nodeSelector;
        this.podAnnotations = $.podAnnotations;
        this.podLabels = $.podLabels;
        this.rbac = $.rbac;
        this.resources = $.resources;
        this.securityContext = $.securityContext;
        this.serviceAccount = $.serviceAccount;
        this.timeout = $.timeout;
        this.tolerations = $.tolerations;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertManagerStartupAPICheckArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertManagerStartupAPICheckArgs $;

        public Builder() {
            $ = new CertManagerStartupAPICheckArgs();
        }

        public Builder(CertManagerStartupAPICheckArgs defaults) {
            $ = new CertManagerStartupAPICheckArgs(Objects.requireNonNull(defaults));
        }

        public Builder affinity(@Nullable Output<AffinityArgs> affinity) {
            $.affinity = affinity;
            return this;
        }

        public Builder affinity(AffinityArgs affinity) {
            return affinity(Output.of(affinity));
        }

        /**
         * @param backoffLimit Job backoffLimit
         * 
         * @return builder
         * 
         */
        public Builder backoffLimit(@Nullable Output<Integer> backoffLimit) {
            $.backoffLimit = backoffLimit;
            return this;
        }

        /**
         * @param backoffLimit Job backoffLimit
         * 
         * @return builder
         * 
         */
        public Builder backoffLimit(Integer backoffLimit) {
            return backoffLimit(Output.of(backoffLimit));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param extraArgs Optional additional arguments for startupapicheck
         * 
         * @return builder
         * 
         */
        public Builder extraArgs(@Nullable Output<List<String>> extraArgs) {
            $.extraArgs = extraArgs;
            return this;
        }

        /**
         * @param extraArgs Optional additional arguments for startupapicheck
         * 
         * @return builder
         * 
         */
        public Builder extraArgs(List<String> extraArgs) {
            return extraArgs(Output.of(extraArgs));
        }

        /**
         * @param extraArgs Optional additional arguments for startupapicheck
         * 
         * @return builder
         * 
         */
        public Builder extraArgs(String... extraArgs) {
            return extraArgs(List.of(extraArgs));
        }

        public Builder image(@Nullable Output<CertManagerImageArgs> image) {
            $.image = image;
            return this;
        }

        public Builder image(CertManagerImageArgs image) {
            return image(Output.of(image));
        }

        /**
         * @param jobAnnotations Optional additional annotations to add to the startupapicheck Job
         * 
         * @return builder
         * 
         */
        public Builder jobAnnotations(@Nullable Output<Map<String,String>> jobAnnotations) {
            $.jobAnnotations = jobAnnotations;
            return this;
        }

        /**
         * @param jobAnnotations Optional additional annotations to add to the startupapicheck Job
         * 
         * @return builder
         * 
         */
        public Builder jobAnnotations(Map<String,String> jobAnnotations) {
            return jobAnnotations(Output.of(jobAnnotations));
        }

        public Builder nodeSelector(@Nullable Output<Map<String,String>> nodeSelector) {
            $.nodeSelector = nodeSelector;
            return this;
        }

        public Builder nodeSelector(Map<String,String> nodeSelector) {
            return nodeSelector(Output.of(nodeSelector));
        }

        /**
         * @param podAnnotations Optional additional annotations to add to the startupapicheck Pods
         * 
         * @return builder
         * 
         */
        public Builder podAnnotations(@Nullable Output<Map<String,String>> podAnnotations) {
            $.podAnnotations = podAnnotations;
            return this;
        }

        /**
         * @param podAnnotations Optional additional annotations to add to the startupapicheck Pods
         * 
         * @return builder
         * 
         */
        public Builder podAnnotations(Map<String,String> podAnnotations) {
            return podAnnotations(Output.of(podAnnotations));
        }

        /**
         * @param podLabels Optional additional labels to add to the startupapicheck Pods
         * 
         * @return builder
         * 
         */
        public Builder podLabels(@Nullable Output<Map<String,String>> podLabels) {
            $.podLabels = podLabels;
            return this;
        }

        /**
         * @param podLabels Optional additional labels to add to the startupapicheck Pods
         * 
         * @return builder
         * 
         */
        public Builder podLabels(Map<String,String> podLabels) {
            return podLabels(Output.of(podLabels));
        }

        public Builder rbac(@Nullable Output<CertManagerStartupAPICheckRBACArgs> rbac) {
            $.rbac = rbac;
            return this;
        }

        public Builder rbac(CertManagerStartupAPICheckRBACArgs rbac) {
            return rbac(Output.of(rbac));
        }

        public Builder resources(@Nullable Output<ResourceRequirementsArgs> resources) {
            $.resources = resources;
            return this;
        }

        public Builder resources(ResourceRequirementsArgs resources) {
            return resources(Output.of(resources));
        }

        /**
         * @param securityContext Pod Security Context to be set on the startupapicheck component Pod. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
         * 
         * @return builder
         * 
         */
        public Builder securityContext(@Nullable Output<PodSecurityContextArgs> securityContext) {
            $.securityContext = securityContext;
            return this;
        }

        /**
         * @param securityContext Pod Security Context to be set on the startupapicheck component Pod. ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
         * 
         * @return builder
         * 
         */
        public Builder securityContext(PodSecurityContextArgs securityContext) {
            return securityContext(Output.of(securityContext));
        }

        public Builder serviceAccount(@Nullable Output<CertManagerServiceAccountArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(CertManagerServiceAccountArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        /**
         * @param timeout Timeout for &#39;kubectl check api&#39; command
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<String> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Timeout for &#39;kubectl check api&#39; command
         * 
         * @return builder
         * 
         */
        public Builder timeout(String timeout) {
            return timeout(Output.of(timeout));
        }

        public Builder tolerations(@Nullable Output<List<TolerationArgs>> tolerations) {
            $.tolerations = tolerations;
            return this;
        }

        public Builder tolerations(List<TolerationArgs> tolerations) {
            return tolerations(Output.of(tolerations));
        }

        public Builder tolerations(TolerationArgs... tolerations) {
            return tolerations(List.of(tolerations));
        }

        public CertManagerStartupAPICheckArgs build() {
            return $;
        }
    }

}
