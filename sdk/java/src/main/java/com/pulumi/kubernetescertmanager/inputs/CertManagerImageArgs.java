// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetescertmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertManagerImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertManagerImageArgs Empty = new CertManagerImageArgs();

    /**
     * Setting a digest will override any tag, e.g. `digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20`.
     * 
     */
    @Import(name="digest")
    private @Nullable Output<String> digest;

    /**
     * @return Setting a digest will override any tag, e.g. `digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20`.
     * 
     */
    public Optional<Output<String>> digest() {
        return Optional.ofNullable(this.digest);
    }

    @Import(name="pullPolicy")
    private @Nullable Output<String> pullPolicy;

    public Optional<Output<String>> pullPolicy() {
        return Optional.ofNullable(this.pullPolicy);
    }

    /**
     * You can manage a registry with `registry: quay.io`.
     * 
     */
    @Import(name="registry")
    private @Nullable Output<String> registry;

    /**
     * @return You can manage a registry with `registry: quay.io`.
     * 
     */
    public Optional<Output<String>> registry() {
        return Optional.ofNullable(this.registry);
    }

    /**
     * You can manage a registry with `repository: jetstack/cert-manager-controller`.
     * 
     */
    @Import(name="repository")
    private @Nullable Output<String> repository;

    /**
     * @return You can manage a registry with `repository: jetstack/cert-manager-controller`.
     * 
     */
    public Optional<Output<String>> repository() {
        return Optional.ofNullable(this.repository);
    }

    /**
     * Override the image tag to deploy by setting this variable. If no value is set, the chart&#39;s appVersion will be used.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Override the image tag to deploy by setting this variable. If no value is set, the chart&#39;s appVersion will be used.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    private CertManagerImageArgs() {}

    private CertManagerImageArgs(CertManagerImageArgs $) {
        this.digest = $.digest;
        this.pullPolicy = $.pullPolicy;
        this.registry = $.registry;
        this.repository = $.repository;
        this.tag = $.tag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertManagerImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertManagerImageArgs $;

        public Builder() {
            $ = new CertManagerImageArgs();
        }

        public Builder(CertManagerImageArgs defaults) {
            $ = new CertManagerImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param digest Setting a digest will override any tag, e.g. `digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20`.
         * 
         * @return builder
         * 
         */
        public Builder digest(@Nullable Output<String> digest) {
            $.digest = digest;
            return this;
        }

        /**
         * @param digest Setting a digest will override any tag, e.g. `digest: sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20`.
         * 
         * @return builder
         * 
         */
        public Builder digest(String digest) {
            return digest(Output.of(digest));
        }

        public Builder pullPolicy(@Nullable Output<String> pullPolicy) {
            $.pullPolicy = pullPolicy;
            return this;
        }

        public Builder pullPolicy(String pullPolicy) {
            return pullPolicy(Output.of(pullPolicy));
        }

        /**
         * @param registry You can manage a registry with `registry: quay.io`.
         * 
         * @return builder
         * 
         */
        public Builder registry(@Nullable Output<String> registry) {
            $.registry = registry;
            return this;
        }

        /**
         * @param registry You can manage a registry with `registry: quay.io`.
         * 
         * @return builder
         * 
         */
        public Builder registry(String registry) {
            return registry(Output.of(registry));
        }

        /**
         * @param repository You can manage a registry with `repository: jetstack/cert-manager-controller`.
         * 
         * @return builder
         * 
         */
        public Builder repository(@Nullable Output<String> repository) {
            $.repository = repository;
            return this;
        }

        /**
         * @param repository You can manage a registry with `repository: jetstack/cert-manager-controller`.
         * 
         * @return builder
         * 
         */
        public Builder repository(String repository) {
            return repository(Output.of(repository));
        }

        /**
         * @param tag Override the image tag to deploy by setting this variable. If no value is set, the chart&#39;s appVersion will be used.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Override the image tag to deploy by setting this variable. If no value is set, the chart&#39;s appVersion will be used.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        public CertManagerImageArgs build() {
            return $;
        }
    }

}
